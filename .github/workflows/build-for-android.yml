name: Build Source Engine for Android

on:
  workflow_dispatch:

jobs:
  Build:
    strategy:
        matrix:
            config:
                - {
                    platform: Android,
                    os: ubuntu-20.04,
                    arch: ARMv7A,
                }
                # Can't build. Ref:https://github.com/nillerusr/source-engine/issues/167
                # - {
                #     platform: Android,
                #     os: ubuntu-20.04,
                #     arch: ARMv8,
                # }

    runs-on: ${{ matrix.config.os }}
    continue-on-error: true
    
    # Engines for Game
    # Referenceï¼šhttps://gist.github.com/tifasoftware/971697061ffcf783807887795d7406df
    # hl2       ->  Half-Life 2
    # episodic  ->  Half-Life 2 Episode One, Half-Life 2 Episode Two
    # hl1       ->  Half Life: Source
    # portal    ->  Portal
    env:
      games: "hl2 episodic hl1 portal"
  
    steps: 
      - name: Clone Source Code
        run: |
          git clone --recursive --depth 1 https://github.com/nillerusr/source-engine.git

      - name: Install Dependencies
        run: |
          wget https://apt.llvm.org/llvm.sh
          chmod +x llvm.sh
          sudo ./llvm.sh 11
          
          wget https://dl.google.com/android/repository/android-ndk-r10e-linux-x86_64.zip -o /dev/null
          unzip android-ndk-r10e-linux-x86_64.zip

          sudo apt update
          sudo apt install build-essential libc6-dev libsdl2-dev

      - name: Make Configure and Build
        run: |
          export PATH="/usr/lib/llvm-11/bin:$PATH"
          export ANDROID_NDK_HOME=$PWD/android-ndk-r10e/
          export NDK_HOME=$PWD/android-ndk-r10e/

          mkdir build
          cd source-engine
          
          # Build the engine
          for build_game in ${games[*]}; do
              echo "Building and installing $build_game for ${{ matrix.config.platform }} on ${{ matrix.config.arch }}..."
          
              if [ "${{ matrix.config.arch }}" == "ARMv7A" ]; then
                  python3 waf configure -T release --prefix='' --build-games="$build_game" --android=armeabi-v7a-hard,4.9,21 --togles --disable-warns
              elif [ "${{ matrix.config.arch }}" == "ARMv8" ]; then
                  python3 waf configure -T release --prefix='' --build-games="$build_game" --android=aarch64,4.9,21 --togles --disable-warns
              fi
          
              python3 waf build
              if [ $? -ne 0 ]; then
                  echo "Build failed for $build_game"
                  exit 1
              fi
          
              python3 waf install --destdir="../build/source-engine-${build_game}-${{ matrix.config.platform }}-${{ matrix.config.arch }}"
              if [ $? -ne 0 ]; then
                  echo "Install failed for $build_game"
                  exit 1
              fi
          
              echo "$build_game build and install completed successfully."
          done

      - name: Compress and Check
        run: |
          cd build
          for build_game in ${games[*]}; do
            tar -cJf source-engine-${build_game}-${{ matrix.config.platform }}-${{ matrix.config.arch }}.tar.xz source-engine-${build_game}-${{ matrix.config.platform }}-${{ matrix.config.arch }}/*
          done

          shasum -a 256 *.tar.xz > sha256sum

          echo -e "Commit Hash: $(git log --pretty=format:'%H' -n 1)\nBuild Time: $(echo `date -u`)\nBuild by: https://github.com/Metaphorme/build-source-engine" > version.txt
      
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: source-engine-${{ matrix.config.platform }}-${{ matrix.config.arch }}
          path: |
            build/*.tar.xz
            build/sha256sum
            build/version.txt
