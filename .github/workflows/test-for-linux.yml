name: Test Source Engine for Linux

on:
  workflow_dispatch:

jobs:
  Build:
    strategy:
        matrix:
            config:
                - {
                    platform: Linux,
                    os: ubuntu-20.04,
                    arch: x86_64,
                }
                - {
                    platform: Linux,
                    os: ubuntu-latest,
                    arch: i386
                }

    runs-on: ${{ matrix.config.os }}
    
    # 需要编译的引擎类型
    # 参考：https://gist.github.com/tifasoftware/971697061ffcf783807887795d7406df
    # hl2       ->  半条命2
    # episodic  ->  半条命2：第一章、半条命2：第二章（我没有测试）
    # hl1       ->  可能是半条命：起源（我没有测试）
    # portal    ->  传送门（我没有测试）
    env:
      games: "hl2 episodic hl1 portal"
  
    steps: 
      - name: Clone Source Code
        run: |
          git clone --recursive --depth 1 https://github.com/nillerusr/source-engine.git

      - name: Install Dependencies
        if: matrix.config.arch == 'x86_64'
        run: |
          sudo apt-get update
          sudo apt-get install -f -y libopenal-dev g++-multilib gcc-multilib libpng-dev libjpeg-dev libfreetype6-dev libfontconfig1-dev libcurl4-gnutls-dev libsdl2-dev zlib1g-dev libbz2-dev libedit-dev

      - name: Install Dependencies
        if: matrix.config.arch == 'i386'
        run: |
          sudo dpkg --add-architecture i386
          sudo apt-get update
          sudo apt-get install -y aptitude
          sudo aptitude install -y libopenal-dev:i386 g++-multilib gcc-multilib libpng-dev:i386 libjpeg-dev:i386 libfreetype6-dev:i386 libfontconfig1-dev:i386 libcurl4-gnutls-dev:i386 libsdl2-dev:i386 zlib1g-dev:i386 libbz2-dev:i386 libedit-dev:i386

      - name: Make Configure and Build
        run: |
          mkdir build
          cd source-engine
          
          # Build the Engine
          for build_game in ${games[*]}; do
              echo "Building and installing $build_game for ${{ matrix.config.platform }} on ${{ matrix.config.arch }}..."
          
              if [ "${{ matrix.config.arch }}" == "x86_64" ]; then
                  python3 waf configure -T release --sanitize=address,undefined --prefix='' --build-games="$build_game" --disable-warn --tests
                  
              elif [ "${{ matrix.config.arch }}" == "i386" ]; then
                  PKG_CONFIG_PATH=/usr/lib/i386-linux-gnu/pkgconfig python3 waf configure -T release --prefix='' --build-games="$build_game" --32bits
              fi
          
              python3 waf build
              if [ $? -ne 0 ]; then
                  echo "Build failed for $build_game"
                  exit 1
              fi
          
              python3 waf install --destdir="../build/source-engine-${build_game}-${{ matrix.config.platform }}-${{ matrix.config.arch }}"
              if [ $? -ne 0 ]; then
                  echo "Install failed for $build_game"
                  exit 1
              fi
              
              echo "$build_game build successfully."
          done

      - name: Test
        run: |
          cd build
          for build_game in ${games[*]}; do
            cd source-engine-${build_game}-${{ matrix.config.platform }}-${{ matrix.config.arch }}
            LD_LIBRARY_PATH=bin/ ./unittest
            cd ..
          done
